version: 2.1
orbs:
  heroku: circleci/heroku@1.2.6
jobs:
  pytest-and-flake:
    docker:
      - image: cimg/python:3.9.1
      - image: cimg/postgres:14.1
        environment:
          DB_USER: $DB_USER
          DB_PASSWORD: $DB_PASSWORD
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client
      - run: psql --version
      - run: |
         psql -h localhost -U postgres -c "CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';"
         psql -h localhost -U postgres -c "CREATE DATABASE $DB_NAME;"
         psql -h localhost -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;"
         psql -h localhost -U postgres -c "ALTER USER $DB_USER CREATEDB;"
      - run:
         name: check TEST environment variable
         command: echo $DB_TEST
      - run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      - run:
         name: flake8 checker
         command: flake8 ./ --output-file test-reports.txt
      - run:
         name: running migrations
         command: python manage.py migrate
      - run:
         name: run tests
         command: pytest -s
      # build and push Docker image
      #TAG=0.1.$CIRCLE_BUILD_NUM
      #docker login -u $DOCKER_USER -p $DOCKER_PASS
      #docker-compose build --pull
      #docker-compose run web python manage.py migrate
      #docker-compose push
      #docker logout
      #TAG=0.1.$CIRCLE_BUILD_NUM
      #docker login -u $DOCKER_USER -p $DOCKER_PASS
      #docker build -t $DOCKER_REPO:$TAG .
      #docker push $DOCKER_REPO:$TAG
      #docker logout
#      docker login -u $DOCKER_USER -p $DOCKER_PASS
#      docker-compose up --build -d
#      docker-compose push
#      docker logout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: init env
          command: |
            docker-compose run -e SECRET_KEY=$SECRET_KEY web
            docker-compose run -e DB_NAME=$DB_NAME web
            docker-compose run -e DB_USER=$DB_USER web
            docker-compose run -e DB_PASSWORD=$DB_PASSWORD web
            docker-compose run -e DB_HOST=$DB_HOST web
            docker-compose run -e DB_PORT=$DB_PORT web
      - run:
          name: build
          command: docker-compose build
      - run:
          name: Start all services declared in docker-compose.yml
          command: docker-compose up
      - run:
          name: docker stat
          command: docker-compose ps
      - run:
          name: init db
          command: |
            docker exec -it ocl-web psql -h localhost -U postgres -c "CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';"
            docker exec -it ocl-web psql -h localhost -U postgres -c "CREATE DATABASE $DB_NAME;"
            docker exec -it ocl-web psql -h localhost -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;"

workflows:
  build-and-test-workflow:
    jobs:
      - pytest-and-flake
      - heroku/deploy-via-git:
          requires:
            - pytest-and-flake
          filters:
            branches:
              only: main